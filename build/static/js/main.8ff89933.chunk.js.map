{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","app","axios","create","baseURL","headers","useState","status","setStatus","handleSubmit","e","a","preventDefault","post","res","console","log","className","onSubmit","value","onChange","target","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRA8CeA,MA1Cf,WACE,IAAMC,EAAMC,IAAMC,OAAO,CACvBC,QAAS,kDACTC,QAAS,CACP,cAAiB,wDAJR,EAQeC,mBAAS,IARxB,mBAQNC,EARM,KAQEC,EARF,KAcPC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACnBD,EAAEE,iBADiB,SAEDX,EAAIY,KAAK,0DAA2D,CACpF,OAAUN,IAHO,OAEbO,EAFa,OAKnBC,QAAQC,IAAIF,GALO,2CAAH,sDAQlB,OACE,qCACE,oBAAIG,UAAU,QAAd,0BACA,sBAAKA,UAAU,UAAf,UACE,mBAAGA,UAAU,cAAb,ohBAMA,0FACA,uBAAMC,SAAUT,EAAhB,UACE,0BAAUU,MAAOZ,EAAQa,SAxBZ,SAACV,GACpBF,EAAUE,EAAEW,OAAOF,QAuBoCF,UAAU,aAC3D,uBAAOA,UAAU,gBAAgBK,KAAK,SAASH,MAAM,6CC3BhDI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8ff89933.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport axios from \"axios\";\n\nfunction App() {\n  const app = axios.create({\n    baseURL: 'https://mastodon.compositecomputer.club/api/v1/',\n    headers: {\n      'Authorization': 'Bearer hEWMfL3oK2WC87kbybWpK2CPlg_3vAQF7O8Xf8sbOkQ'\n    }\n  })\n\n  const [status, setStatus] = useState(\"\");\n\n  const handleStatus = (e) => {\n    setStatus(e.target.value)\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const res = await app.post('https://mastodon.compositecomputer.club/api/v1/statuses', {\n      \"status\": status\n    })\n    console.log(res)\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">NicoCommeDon</h1>\n      <div className=\"content\">\n        <p className=\"description\">\n          C3部内で利用しているSNS，Mastodon！\n          Mastodonで流れるコメントや何気ない投稿をニコニコ動画のように流したい！\n          そんな思いでこのサイトを作成しました！\n          下のフォームに投稿するとMastodonに投稿できます！\n        </p>\n        <p>※最長は500文字です．</p>\n        <form onSubmit={handleSubmit}>\n          <textarea value={status} onChange={handleStatus} className=\"textarea\"></textarea>\n          <input className=\"submit_button\" type=\"submit\" value=\"トゥート！\" />\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}